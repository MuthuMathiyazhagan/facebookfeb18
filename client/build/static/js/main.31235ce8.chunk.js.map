{"version":3,"sources":["home/index.js","reportWebVitals.js","index.js"],"names":["data","Home","useState","file","setFile","fileName","setFileName","uploadFile","e","a","console","log","formData","FormData","append","res","axios","post","ex","className","type","accept","onChange","input","target","files","reader","FileReader","onload","text","result","str","delimiter","headers","slice","indexOf","split","map","row","values","reduce","object","header","index","csvToArray","readAsText","name","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sJAGIA,E,+FAiCW,SAASC,IACtB,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAwBMC,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sDAEjBC,QAAQC,IAAIX,IAGNY,EAAW,IAAIC,UACZC,OAAO,OAAQX,GACxBS,EAASE,OAAO,WAAYT,GAC5BK,QAAQC,IAAIC,GAEZ,IACQG,EAAMC,IAAMC,KAAK,uCAAwCjB,GAM/DU,QAAQC,IAAII,GACZ,MAAOG,GACPR,QAAQC,IAAIO,GAnBG,2CAAH,sDAuBhB,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAOC,KAAK,OAAOC,OAAO,kBAAkBC,SA/C/B,SAACd,GAChB,IAAIe,EAAQf,EAAEgB,OAAOC,MAAM,GACrBC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAUpB,GACxBE,QAAQC,IAAI,WAAYH,GACxB,IAAMqB,EAAOrB,EAAEgB,OAAOM,OACtB9B,EAtCN,SAAoB+B,GAAuB,IAAlBC,EAAiB,uDAAL,IAG7BC,EAAUF,EAAIG,MAAM,EAAGH,EAAII,QAAQ,OAAOC,MAAMJ,GAqBtD,OAjBaD,EAAIG,MAAMH,EAAII,QAAQ,MAAQ,GAAGC,MAAM,MAOnCC,KAAI,SAAUC,GAC7B,IAAMC,EAASD,EAAIF,MAAMJ,GAKzB,OAJWC,EAAQO,QAAO,SAAUC,EAAQC,EAAQC,GAElD,OADAF,EAAOC,GAAUH,EAAOI,GACjBF,IACN,OAmBMG,CAAWf,GAClBnB,QAAQC,IAAIX,IAId0B,EAAOmB,WAAWtB,GAElBb,QAAQC,IAAI,IAAKH,GAEjBE,QAAQC,IAAIH,EAAEgB,OAAOC,MAAM,IAE3BrB,EAAQI,EAAEgB,OAAOC,MAAM,IACvBnB,EAAYE,EAAEgB,OAAOC,MAAM,GAAGqB,SA6B5B,wBAAQC,QAASxC,EAAjB,uBCxFN,IAYeyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCSdQ,IAASC,OAAO,cAACzD,EAAD,IAAU0D,SAASC,eAAe,SASlDZ,M","file":"static/js/main.31235ce8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\nimport axios from \"axios\";\nvar data ;\n\n// Reading the file using default\n// fs npm package\n// import fs from 'fs'\n\nfunction csvToArray(str, delimiter = \",\") {\n  // slice from start of text to the first \\n index\n  // use split to create an array from string by delimiter\n  const headers = str.slice(0, str.indexOf(\"\\n\")).split(delimiter);\n\n  // slice from \\n index + 1 to the end of the text\n  // use split to create an array of each csv value row\n  const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\n\");\n\n  // Map the rows\n  // split values from each row into an array\n  // use headers.reduce to create an object\n  // object properties derived from headers:values\n  // the object passed as an element of the array\n  const arr = rows.map(function (row) {\n    const values = row.split(delimiter);\n    const el = headers.reduce(function (object, header, index) {\n      object[header] = values[index];\n      return object;\n    }, {});\n    return el;\n  });\n\n  // return the array\n  return arr;\n}\n\nexport default function Home() {\n  const [file, setFile] = useState();\n  const [fileName, setFileName] = useState(\"\");\n\n  const saveFile = (e) => {\n    var input = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      console.log(\"Reader E\", e);\n      const text = e.target.result;\n      data = csvToArray(text);\n      console.log(data);\n      // document.write(JSON.stringify(data));\n    };\n\n    reader.readAsText(input);\n\n    console.log(\"E\", e);\n\n    console.log(e.target.files[0]);\n\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  };\n\n  const uploadFile = async (e) => {\n\n    console.log(data);\n\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"fileName\", fileName);\n    console.log(formData);\n\n    try {\n      const res = axios.post(\"http://127.0.0.1:3010/greeting/hello\", data);\n\n      // const res = await axios.post(\n      //   \"http://127.0.0.1:3010/greeting/hello\",\n      //   formData\n      // );\n      console.log(res);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <input type=\"file\" accept=\".csv,.xlsx,.xls\" onChange={saveFile} />\n      <button onClick={uploadFile}>Upload</button>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './home';\n// import App from './App';\n// import Greeting from './Greeting';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\nReactDOM.render(<Home />, document.getElementById('root'));\n// ReactDOM.render(<Greeting />, document.getElementById('root'));\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}